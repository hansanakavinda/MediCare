// <auto-generated />
using System;
using MediCare.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MediCare.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823075644_FixFeedbackRatingType")]
    partial class FixFeedbackRatingType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("APPUSER")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediCare.Models.APPOINTMENT", b =>
                {
                    b.Property<decimal>("APPOINTMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("APPOINTMENT_ID"));

                    b.Property<DateTime>("CREATED_AT")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasDefaultValueSql("SYSTIMESTAMP ");

                    b.Property<decimal>("DOCTOR_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("NOTES")
                        .HasColumnType("CLOB");

                    b.Property<decimal>("PATIENT_ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("SCHEDULED_AT")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)");

                    b.Property<decimal?>("SCHEDULE_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasDefaultValueSql("'Pending' ");

                    b.Property<DateTime?>("UPDATED_AT")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)");

                    b.HasKey("APPOINTMENT_ID")
                        .HasName("SYS_C0013596");

                    b.HasIndex("SCHEDULE_ID");

                    b.HasIndex(new[] { "DOCTOR_ID" }, "IDX_APPOINTMENT_DOCTOR");

                    b.HasIndex(new[] { "PATIENT_ID" }, "IDX_APPOINTMENT_PATIENT");

                    b.ToTable("APPOINTMENT", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.CLINIC", b =>
                {
                    b.Property<decimal>("CLINIC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CLINIC_ID"));

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(400)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<string>("PHONE")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)");

                    b.HasKey("CLINIC_ID")
                        .HasName("SYS_C0013568");

                    b.ToTable("CLINIC", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.DOCTOR", b =>
                {
                    b.Property<decimal>("DOCTOR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("DOCTOR_ID"));

                    b.Property<string>("BIO")
                        .HasColumnType("CLOB");

                    b.Property<decimal?>("CLINIC_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("FEE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10,2)")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("SPECIALTY_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("USER_ID")
                        .HasColumnType("NUMBER");

                    b.HasKey("DOCTOR_ID")
                        .HasName("SYS_C0013571");

                    b.HasIndex(new[] { "CLINIC_ID" }, "IDX_DOCTOR_CLINIC");

                    b.HasIndex(new[] { "SPECIALTY_ID" }, "IDX_DOCTOR_SPECIALTY");

                    b.HasIndex(new[] { "USER_ID" }, "UQ_DOCTOR_USER")
                        .IsUnique();

                    b.ToTable("DOCTOR", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.FEEDBACK", b =>
                {
                    b.Property<decimal>("FEEDBACK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("FEEDBACK_ID"));

                    b.Property<DateTime>("CREATED_AT")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasDefaultValueSql("SYSTIMESTAMP ");

                    b.Property<decimal>("DOCTOR_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("MSG")
                        .HasColumnType("CLOB");

                    b.Property<decimal>("PATIENT_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("RATING")
                        .HasColumnType("NUMBER");

                    b.HasKey("FEEDBACK_ID")
                        .HasName("SYS_C0013618");

                    b.HasIndex("DOCTOR_ID");

                    b.HasIndex("PATIENT_ID");

                    b.ToTable("FEEDBACK", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.PATIENT", b =>
                {
                    b.Property<decimal>("PATIENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("PATIENT_ID"));

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(400)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("DATE");

                    b.Property<string>("GENDER")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)");

                    b.Property<decimal>("USER_ID")
                        .HasColumnType("NUMBER");

                    b.HasKey("PATIENT_ID")
                        .HasName("SYS_C0013578");

                    b.HasIndex(new[] { "USER_ID" }, "UQ_PATIENT_USER")
                        .IsUnique();

                    b.ToTable("PATIENT", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.PAYMENT", b =>
                {
                    b.Property<decimal>("PAYMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("PAYMENT_ID"));

                    b.Property<decimal>("AMOUNT")
                        .HasColumnType("NUMBER(12,2)");

                    b.Property<decimal>("APPOINTMENT_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("METHOD")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasDefaultValueSql("'credit card'");

                    b.Property<DateTime?>("PAID_AT")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)");

                    b.Property<string>("STATUS")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasDefaultValueSql("'Pending'");

                    b.Property<string>("TXN_REF")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)");

                    b.HasKey("PAYMENT_ID")
                        .HasName("SYS_C0013605");

                    b.HasIndex(new[] { "APPOINTMENT_ID" }, "IDX_PAYMENT_APPOINTMENT");

                    b.ToTable("PAYMENT", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.PRESCRIPTION", b =>
                {
                    b.Property<decimal>("PRESCRIPTION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("PRESCRIPTION_ID"));

                    b.Property<decimal>("APPOINTMENT_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("CONTENT")
                        .HasColumnType("CLOB");

                    b.Property<DateTime>("CREATED_AT")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasDefaultValueSql("SYSTIMESTAMP ");

                    b.HasKey("PRESCRIPTION_ID")
                        .HasName("SYS_C0013610");

                    b.HasIndex("APPOINTMENT_ID");

                    b.ToTable("PRESCRIPTION", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.SCHEDULE", b =>
                {
                    b.Property<decimal>("SCHEDULE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("SCHEDULE_ID"));

                    b.Property<bool>("DAY_OF_WEEK")
                        .HasColumnType("NUMBER(1)");

                    b.Property<decimal>("DOCTOR_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("END_TIME")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)");

                    b.Property<byte?>("SLOT_MINUTES")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasDefaultValueSql("30");

                    b.Property<string>("START_TIME")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)");

                    b.HasKey("SCHEDULE_ID")
                        .HasName("SYS_C0013587");

                    b.HasIndex(new[] { "DOCTOR_ID" }, "IDX_SCHEDULE_DOCTOR");

                    b.ToTable("SCHEDULE", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.SPECIALTY", b =>
                {
                    b.Property<decimal>("SPECIALTY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("SPECIALTY_ID"));

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)");

                    b.HasKey("SPECIALTY_ID")
                        .HasName("SYS_C0013564");

                    b.HasIndex(new[] { "NAME" }, "UQ_SPECIALTY_NAME")
                        .IsUnique();

                    b.ToTable("SPECIALTY", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.USER", b =>
                {
                    b.Property<decimal>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("USER_ID"));

                    b.Property<DateTime>("CREATED_AT")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasDefaultValueSql("SYSTIMESTAMP ");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("FULL_NAME")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<string>("IS_ACTIVE")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasDefaultValueSql("'Y' ")
                        .IsFixedLength();

                    b.Property<string>("PHONE")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("ROLE")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)");

                    b.HasKey("USER_ID")
                        .HasName("SYS_C0013560");

                    b.HasIndex(new[] { "EMAIL" }, "UQ_USERS_EMAIL")
                        .IsUnique();

                    b.ToTable("USERS", "APPUSER");
                });

            modelBuilder.Entity("MediCare.Models.APPOINTMENT", b =>
                {
                    b.HasOne("MediCare.Models.DOCTOR", "DOCTOR")
                        .WithMany("APPOINTMENTs")
                        .HasForeignKey("DOCTOR_ID")
                        .IsRequired()
                        .HasConstraintName("FK_APPOINTMENT_DOCTOR");

                    b.HasOne("MediCare.Models.PATIENT", "PATIENT")
                        .WithMany("APPOINTMENTs")
                        .HasForeignKey("PATIENT_ID")
                        .IsRequired()
                        .HasConstraintName("FK_APPOINTMENT_PATIENT");

                    b.HasOne("MediCare.Models.SCHEDULE", "SCHEDULE")
                        .WithMany("APPOINTMENTs")
                        .HasForeignKey("SCHEDULE_ID")
                        .HasConstraintName("FK_APPOINTMENT_SCHEDULE");

                    b.Navigation("DOCTOR");

                    b.Navigation("PATIENT");

                    b.Navigation("SCHEDULE");
                });

            modelBuilder.Entity("MediCare.Models.DOCTOR", b =>
                {
                    b.HasOne("MediCare.Models.CLINIC", "CLINIC")
                        .WithMany("DOCTORs")
                        .HasForeignKey("CLINIC_ID")
                        .HasConstraintName("FK_DOCTOR_CLINIC");

                    b.HasOne("MediCare.Models.SPECIALTY", "SPECIALTY")
                        .WithMany("DOCTORs")
                        .HasForeignKey("SPECIALTY_ID")
                        .HasConstraintName("FK_DOCTOR_SPECIALTY");

                    b.HasOne("MediCare.Models.USER", "USER")
                        .WithOne("DOCTOR")
                        .HasForeignKey("MediCare.Models.DOCTOR", "USER_ID")
                        .IsRequired()
                        .HasConstraintName("FK_DOCTOR_USER");

                    b.Navigation("CLINIC");

                    b.Navigation("SPECIALTY");

                    b.Navigation("USER");
                });

            modelBuilder.Entity("MediCare.Models.FEEDBACK", b =>
                {
                    b.HasOne("MediCare.Models.DOCTOR", "DOCTOR")
                        .WithMany("FEEDBACKs")
                        .HasForeignKey("DOCTOR_ID")
                        .IsRequired()
                        .HasConstraintName("FK_FEEDBACK_DOCTOR");

                    b.HasOne("MediCare.Models.PATIENT", "PATIENT")
                        .WithMany("FEEDBACKs")
                        .HasForeignKey("PATIENT_ID")
                        .IsRequired()
                        .HasConstraintName("FK_FEEDBACK_PATIENT");

                    b.Navigation("DOCTOR");

                    b.Navigation("PATIENT");
                });

            modelBuilder.Entity("MediCare.Models.PATIENT", b =>
                {
                    b.HasOne("MediCare.Models.USER", "USER")
                        .WithOne("PATIENT")
                        .HasForeignKey("MediCare.Models.PATIENT", "USER_ID")
                        .IsRequired()
                        .HasConstraintName("FK_PATIENT_USER");

                    b.Navigation("USER");
                });

            modelBuilder.Entity("MediCare.Models.PAYMENT", b =>
                {
                    b.HasOne("MediCare.Models.APPOINTMENT", "APPOINTMENT")
                        .WithMany("PAYMENTs")
                        .HasForeignKey("APPOINTMENT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PAYMENT_APPOINTMENT");

                    b.Navigation("APPOINTMENT");
                });

            modelBuilder.Entity("MediCare.Models.PRESCRIPTION", b =>
                {
                    b.HasOne("MediCare.Models.APPOINTMENT", "APPOINTMENT")
                        .WithMany("PRESCRIPTIONs")
                        .HasForeignKey("APPOINTMENT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRESCRIPTION_APPOINTMENT");

                    b.Navigation("APPOINTMENT");
                });

            modelBuilder.Entity("MediCare.Models.SCHEDULE", b =>
                {
                    b.HasOne("MediCare.Models.DOCTOR", "DOCTOR")
                        .WithMany("SCHEDULEs")
                        .HasForeignKey("DOCTOR_ID")
                        .IsRequired()
                        .HasConstraintName("FK_SCHEDULE_DOCTOR");

                    b.Navigation("DOCTOR");
                });

            modelBuilder.Entity("MediCare.Models.APPOINTMENT", b =>
                {
                    b.Navigation("PAYMENTs");

                    b.Navigation("PRESCRIPTIONs");
                });

            modelBuilder.Entity("MediCare.Models.CLINIC", b =>
                {
                    b.Navigation("DOCTORs");
                });

            modelBuilder.Entity("MediCare.Models.DOCTOR", b =>
                {
                    b.Navigation("APPOINTMENTs");

                    b.Navigation("FEEDBACKs");

                    b.Navigation("SCHEDULEs");
                });

            modelBuilder.Entity("MediCare.Models.PATIENT", b =>
                {
                    b.Navigation("APPOINTMENTs");

                    b.Navigation("FEEDBACKs");
                });

            modelBuilder.Entity("MediCare.Models.SCHEDULE", b =>
                {
                    b.Navigation("APPOINTMENTs");
                });

            modelBuilder.Entity("MediCare.Models.SPECIALTY", b =>
                {
                    b.Navigation("DOCTORs");
                });

            modelBuilder.Entity("MediCare.Models.USER", b =>
                {
                    b.Navigation("DOCTOR");

                    b.Navigation("PATIENT");
                });
#pragma warning restore 612, 618
        }
    }
}
